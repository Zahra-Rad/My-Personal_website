/*
! tailwindcss v3.4.3 | MIT License | https://tailwindcss.com
*/

/*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box;
  /* 1 */
  border-width: 0;
  /* 2 */
  border-style: solid;
  /* 2 */
  border-color: currentColor;
  /* 2 */
}

::before,
::after {
  --tw-content: '';
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
5. Use the user's configured `sans` font-feature-settings by default.
6. Use the user's configured `sans` font-variation-settings by default.
7. Disable tap highlights on iOS
*/

html,
:host {
  line-height: 1.5;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -moz-tab-size: 4;
  /* 3 */
  -o-tab-size: 4;
     tab-size: 4;
  /* 3 */
  font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
  /* 4 */
  font-feature-settings: normal;
  /* 5 */
  font-variation-settings: normal;
  /* 6 */
  -webkit-tap-highlight-color: transparent;
  /* 7 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0;
  /* 1 */
  line-height: inherit;
  /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0;
  /* 1 */
  color: inherit;
  /* 2 */
  border-top-width: 1px;
  /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr:where([title]) {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font-family by default.
2. Use the user's configured `mono` font-feature-settings by default.
3. Use the user's configured `mono` font-variation-settings by default.
4. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
  /* 1 */
  font-feature-settings: normal;
  /* 2 */
  font-variation-settings: normal;
  /* 3 */
  font-size: 1em;
  /* 4 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0;
  /* 1 */
  border-color: inherit;
  /* 2 */
  border-collapse: collapse;
  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-feature-settings: inherit;
  /* 1 */
  font-variation-settings: inherit;
  /* 1 */
  font-size: 100%;
  /* 1 */
  font-weight: inherit;
  /* 1 */
  line-height: inherit;
  /* 1 */
  letter-spacing: inherit;
  /* 1 */
  color: inherit;
  /* 1 */
  margin: 0;
  /* 2 */
  padding: 0;
  /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
input:where([type='button']),
input:where([type='reset']),
input:where([type='submit']) {
  -webkit-appearance: button;
  /* 1 */
  background-color: transparent;
  /* 2 */
  background-image: none;
  /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul,
menu {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Reset default styling for dialogs.
*/

dialog {
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;
  /* 1 */
  color: #9ca3af;
  /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
Make sure disabled buttons don't get the pointer cursor.
*/

:disabled {
  cursor: default;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block;
  /* 1 */
  vertical-align: middle;
  /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/* Make elements with the HTML hidden attribute stay hidden by default */

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

::backdrop {
  --tw-border-spacing-x: 0;
  --tw-border-spacing-y: 0;
  --tw-translate-x: 0;
  --tw-translate-y: 0;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  --tw-pan-x:  ;
  --tw-pan-y:  ;
  --tw-pinch-zoom:  ;
  --tw-scroll-snap-strictness: proximity;
  --tw-gradient-from-position:  ;
  --tw-gradient-via-position:  ;
  --tw-gradient-to-position:  ;
  --tw-ordinal:  ;
  --tw-slashed-zero:  ;
  --tw-numeric-figure:  ;
  --tw-numeric-spacing:  ;
  --tw-numeric-fraction:  ;
  --tw-ring-inset:  ;
  --tw-ring-offset-width: 0px;
  --tw-ring-offset-color: #fff;
  --tw-ring-color: rgb(59 130 246 / 0.5);
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
  --tw-shadow-colored: 0 0 #0000;
  --tw-blur:  ;
  --tw-brightness:  ;
  --tw-contrast:  ;
  --tw-grayscale:  ;
  --tw-hue-rotate:  ;
  --tw-invert:  ;
  --tw-saturate:  ;
  --tw-sepia:  ;
  --tw-drop-shadow:  ;
  --tw-backdrop-blur:  ;
  --tw-backdrop-brightness:  ;
  --tw-backdrop-contrast:  ;
  --tw-backdrop-grayscale:  ;
  --tw-backdrop-hue-rotate:  ;
  --tw-backdrop-invert:  ;
  --tw-backdrop-opacity:  ;
  --tw-backdrop-saturate:  ;
  --tw-backdrop-sepia:  ;
  --tw-contain-size:  ;
  --tw-contain-layout:  ;
  --tw-contain-paint:  ;
  --tw-contain-style:  ;
}

.fixed {
  position: fixed;
}

.relative {
  position: relative;
}

.mb-\[\] {
  margin-bottom: ;
}

.mb-\[2\] {
  margin-bottom: 2;
}

.mb-\[2v\] {
  margin-bottom: 2v;
}

.mb-\[2vh\] {
  margin-bottom: 2vh;
}

.mb-\[1\] {
  margin-bottom: 1;
}

.mb-\[14\] {
  margin-bottom: 14;
}

.mb-\[14p\] {
  margin-bottom: 14p;
}

.mb-\[14px\] {
  margin-bottom: 14px;
}

.block {
  display: block;
}

.flex {
  display: flex;
}

.h-full {
  height: 100%;
}

.h-\[\] {
  height: ;
}

.h-\[2\] {
  height: 2;
}

.h-\[2p\] {
  height: 2p;
}

.h-\[2px\] {
  height: 2px;
}

.h-\[px\] {
  height: px;
}

.h-\[1px\] {
  height: 1px;
}

.h-\[1\.px\] {
  height: 1.px;
}

.h-\[1\.5px\] {
  height: 1.5px;
}

.h-\[full\] {
  height: full;
}

.h-\[1\] {
  height: 1;
}

.h-\[10\] {
  height: 10;
}

.h-\[100\] {
  height: 100;
}

.h-\[100v\] {
  height: 100v;
}

.h-\[100vh\] {
  height: 100vh;
}

.h-fit {
  height: -moz-fit-content;
  height: fit-content;
}

.max-h-full {
  max-height: 100%;
}

.max-h-\[\] {
  max-height: ;
}

.max-h-\[\[\]\] {
  max-height: [];
}

.max-h-\[\[1\]\] {
  max-height: [1];
}

.max-h-\[\[10\]\] {
  max-height: [10];
}

.max-h-\[\[100\]\] {
  max-height: [100];
}

.max-h-\[1\] {
  max-height: 1;
}

.max-h-\[10\] {
  max-height: 10;
}

.max-h-\[100\] {
  max-height: 100;
}

.max-h-\[100\%\] {
  max-height: 100%;
}

.min-h-full {
  min-height: 100%;
}

.min-h-\[\] {
  min-height: ;
}

.min-h-\[1\] {
  min-height: 1;
}

.min-h-\[10\] {
  min-height: 10;
}

.min-h-\[100\] {
  min-height: 100;
}

.min-h-\[100v\] {
  min-height: 100v;
}

.min-h-\[100vh\] {
  min-height: 100vh;
}

.w-full {
  width: 100%;
}

.w-1 {
  width: 0.25rem;
}

.w-10 {
  width: 2.5rem;
}

.w-\[\] {
  width: ;
}

.w-\[1\] {
  width: 1;
}

.w-\[10\] {
  width: 10;
}

.w-\[100\] {
  width: 100;
}

.w-\[100p\] {
  width: 100p;
}

.w-\[100px\] {
  width: 100px;
}

.w-\[11\] {
  width: 11;
}

.w-\[110\] {
  width: 110;
}

.w-\[110p\] {
  width: 110p;
}

.w-\[110px\] {
  width: 110px;
}

.max-w-full {
  max-width: 100%;
}

.flex-1 {
  flex: 1 1 0%;
}

.translate-x-0 {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.skew-x-0 {
  --tw-skew-x: 0deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.flex-col {
  flex-direction: column;
}

.items-center {
  align-items: center;
}

.bg-primary {
  --tw-bg-opacity: 1;
  background-color: rgb(236 231 225 / var(--tw-bg-opacity));
}

.bg-secondary {
  --tw-bg-opacity: 1;
  background-color: rgb(26 24 24 / var(--tw-bg-opacity));
}

.pl-\[20px\] {
  padding-left: 20px;
}

.pr-\[15px\] {
  padding-right: 15px;
}

.pt-\[5\%\] {
  padding-top: 5%;
}

.pl-\[\] {
  padding-left: ;
}

.pl-\[\!\] {
  padding-left: !;
}

.pl-\[1\] {
  padding-left: 1;
}

.pl-\[10\] {
  padding-left: 10;
}

.pl-\[10\%\] {
  padding-left: 10%;
}

.pr-\[\] {
  padding-right: ;
}

.pr-\[1\] {
  padding-right: 1;
}

.pr-\[10\] {
  padding-right: 10;
}

.pr-\[10\%\] {
  padding-right: 10%;
}

.pt-\[\] {
  padding-top: ;
}

.pt-\[2\] {
  padding-top: 2;
}

.pt-\[20\] {
  padding-top: 20;
}

.pt-\[20\%\] {
  padding-top: 20%;
}

.pt-\[10\] {
  padding-top: 10;
}

.pt-\[10\%\] {
  padding-top: 10%;
}

.pt-\[2v\] {
  padding-top: 2v;
}

.pt-\[2vh\] {
  padding-top: 2vh;
}

.pt-\[2\%\] {
  padding-top: 2%;
}

.pb-\[\] {
  padding-bottom: ;
}

.pb-\[2\] {
  padding-bottom: 2;
}

.pb-\[2\%\] {
  padding-bottom: 2%;
}

.pr-\[\%\] {
  padding-right: %;
}

.pr-\[5\] {
  padding-right: 5;
}

.pr-\[5\%\] {
  padding-right: 5%;
}

.pt-\[vh\] {
  padding-top: vh;
}

.pt-\[3vh\] {
  padding-top: 3vh;
}

.pt-\[30vh\] {
  padding-top: 30vh;
}

.pt-\[5vh\] {
  padding-top: 5vh;
}

.pt-\[6vh\] {
  padding-top: 6vh;
}

.pt-\[4vh\] {
  padding-top: 4vh;
}

.pt-\[\%\] {
  padding-top: %;
}

.pt-0 {
  padding-top: 0px;
}

.pt-\[0\%\] {
  padding-top: 0%;
}

.pt-\[1\] {
  padding-top: 1;
}

.pt-\[1v\] {
  padding-top: 1v;
}

.pt-\[1vh\] {
  padding-top: 1vh;
}

.pt-\[5v\] {
  padding-top: 5v;
}

.pt-\[5vw\] {
  padding-top: 5vw;
}

.pt-\[15vw\] {
  padding-top: 15vw;
}

.pt-\[vw\] {
  padding-top: vw;
}

.pt-\[6vw\] {
  padding-top: 6vw;
}

.pt-\[7vw\] {
  padding-top: 7vw;
}

.pt-\[1vw\] {
  padding-top: 1vw;
}

.pt-\[2vw\] {
  padding-top: 2vw;
}

.pt-\[0vw\] {
  padding-top: 0vw;
}

.pt-\[10vw\] {
  padding-top: 10vw;
}

.pt-6 {
  padding-top: 1.5rem;
}

.pt-16 {
  padding-top: 4rem;
}

.pt-1 {
  padding-top: 0.25rem;
}

.pt-14 {
  padding-top: 3.5rem;
}

.pt-4 {
  padding-top: 1rem;
}

.pt-12 {
  padding-top: 3rem;
}

.pt-10 {
  padding-top: 2.5rem;
}

.pt-8 {
  padding-top: 2rem;
}

.pt-2 {
  padding-top: 0.5rem;
}

.text-center {
  text-align: center;
}

.text-right {
  text-align: right;
}

.font-MontserratReg {
  font-family: MontserratReg;
}

.font-\[\] {
  font-family: ;
}

.font-Grandslang {
  font-family: Grandslang;
}

.text-\[10px\] {
  font-size: 10px;
}

.text-\[13px\] {
  font-size: 13px;
}

.text-xs {
  font-size: 0.75rem;
  line-height: 1rem;
}

.text-\[15vw\] {
  font-size: 15vw;
}

.font-normal {
  font-weight: 400;
}

.font-bold {
  font-weight: 700;
}

.font-\[5\] {
  font-weight: 5;
}

.font-\[50\] {
  font-weight: 50;
}

.font-\[500\] {
  font-weight: 500;
}

.font-\[500p\] {
  font-weight: 500p;
}

.font-\[500px\] {
  font-weight: 500px;
}

.font-\[00px\] {
  font-weight: 00px;
}

.font-\[600px\] {
  font-weight: 600px;
}

.font-\[700px\] {
  font-weight: 700px;
}

.font-\[800px\] {
  font-weight: 800px;
}

.font-\[900px\] {
  font-weight: 900px;
}

.font-\[100px\] {
  font-weight: 100px;
}

.font-\[1000px\] {
  font-weight: 1000px;
}

.font-\[1000p\] {
  font-weight: 1000p;
}

.font-\[1000\] {
  font-weight: 1000;
}

.font-\[100\] {
  font-weight: 100;
}

.font-\[00\] {
  font-weight: 00;
}

.uppercase {
  text-transform: uppercase;
}

.tracking-\[5px\] {
  letter-spacing: 5px;
}

.tracking-tighter {
  letter-spacing: -0.05em;
}

.tracking-\[tighter\] {
  letter-spacing: tighter;
}

.tracking-\[4\] {
  letter-spacing: 4;
}

.tracking-\[4px\] {
  letter-spacing: 4px;
}

.tracking-\[\] {
  letter-spacing: ;
}

.tracking-\[-\] {
  letter-spacing: -;
}

.tracking-\[-1\] {
  letter-spacing: -1;
}

.tracking-\[-1p\] {
  letter-spacing: -1p;
}

.tracking-\[-1px\] {
  letter-spacing: -1px;
}

.text-secondary {
  --tw-text-opacity: 1;
  color: rgb(26 24 24 / var(--tw-text-opacity));
}

.text-\[\] {
  color: ;
}

.text-\[1\] {
  color: 1;
}

.text-\[10\] {
  color: 10;
}

.text-\[10p\] {
  color: 10p;
}

.text-primary {
  --tw-text-opacity: 1;
  color: rgb(236 231 225 / var(--tw-text-opacity));
}

.text-\[13\] {
  color: 13;
}

.text-\[13p\] {
  color: 13p;
}

.text-\[15\] {
  color: 15;
}

.text-\[15v\] {
  color: 15v;
}

.line-through {
  text-decoration-line: line-through;
}

.transition {
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.transition-all {
  transition-property: all;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 150ms;
}

.duration-300 {
  transition-duration: 300ms;
}

.ease-in-out {
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
}

@font-face {
  font-family: MontserratReg;

  src: url("../fonts/MontserratReg.woff2") format("woff2");
}

@font-face {
  font-family: MontserratItalic;

  src: url("../fonts/MontserratItalic.woff2") format("woff2");
}

@font-face {
  font-family: Grandslang;

  src: url("../fonts/Grandslang.woff2") format("woff2");
}

.hover\:translate-x-0:hover {
  --tw-translate-x: 0px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:translate-x-\[\]:hover {
  --tw-translate-x: ;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:translate-x-\[5\]:hover {
  --tw-translate-x: 5;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:translate-x-\[5p\]:hover {
  --tw-translate-x: 5p;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:translate-x-\[5px\]:hover {
  --tw-translate-x: 5px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:translate-x-\[15px\]:hover {
  --tw-translate-x: 15px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:translate-x-\[35px\]:hover {
  --tw-translate-x: 35px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:translate-x-\[px\]:hover {
  --tw-translate-x: px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:translate-x-\[1px\]:hover {
  --tw-translate-x: 1px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:translate-x-\[10px\]:hover {
  --tw-translate-x: 10px;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:skew-x-6:hover {
  --tw-skew-x: 6deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:skew-x-1:hover {
  --tw-skew-x: 1deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:skew-x-12:hover {
  --tw-skew-x: 12deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:-skew-x-12:hover {
  --tw-skew-x: -12deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:-skew-x-1:hover {
  --tw-skew-x: -1deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:-skew-x-6:hover {
  --tw-skew-x: -6deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:-skew-x-\[6\]:hover {
  --tw-skew-x: -6;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:-skew-x-\[1\]:hover {
  --tw-skew-x: -1;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:-skew-x-\[10\]:hover {
  --tw-skew-x: -10;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:-skew-x-\[10d\]:hover {
  --tw-skew-x: -10d;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:-skew-x-\[10de\]:hover {
  --tw-skew-x: -10de;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:-skew-x-\[10deg\]:hover {
  --tw-skew-x: -10deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:-skew-x-\[1deg\]:hover {
  --tw-skew-x: -1deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:-skew-x-\[12deg\]:hover {
  --tw-skew-x: -12deg;
  transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
}

.hover\:italic:hover {
  font-style: italic;
}

.hover\:line-through:hover {
  text-decoration-line: line-through;
}

@media (min-width: 640px) {
  .sm\:pb-\[-5vw\] {
    padding-bottom: -5vw;
  }

  .sm\:pb-\[-vw\] {
    padding-bottom: -vw;
  }

  .sm\:pb-\[-1vw\] {
    padding-bottom: -1vw;
  }

  .sm\:pb-\[-10vw\] {
    padding-bottom: -10vw;
  }

  .sm\:pb-0 {
    padding-bottom: 0px;
  }

  .sm\:leading-3 {
    line-height: .75rem;
  }

  .sm\:leading-4 {
    line-height: 1rem;
  }

  .sm\:leading-5 {
    line-height: 1.25rem;
  }

  .sm\:leading-6 {
    line-height: 1.5rem;
  }

  .sm\:leading-7 {
    line-height: 1.75rem;
  }

  .sm\:leading-10 {
    line-height: 2.5rem;
  }

  .sm\:leading-snug {
    line-height: 1.375;
  }

  .sm\:leading-tight {
    line-height: 1.25;
  }
}

@media (min-width: 768px) {
  .md\:absolute {
    position: absolute;
  }

  .md\:left-\[-20\%\] {
    left: -20%;
  }

  .md\:bottom-0 {
    bottom: 0px;
  }

  .md\:bottom-\[\] {
    bottom: ;
  }

  .md\:bottom-\[3\] {
    bottom: 3;
  }

  .md\:bottom-\[3v\] {
    bottom: 3v;
  }

  .md\:bottom-\[3vh\] {
    bottom: 3vh;
  }

  .md\:right-0 {
    right: 0px;
  }

  .md\:left-0 {
    left: 0px;
  }

  .md\:left-\[-0\%\] {
    left: -0%;
  }

  .md\:left-\[-50\%\] {
    left: -50%;
  }

  .md\:mb-\[\] {
    margin-bottom: ;
  }

  .md\:mb-\[5\] {
    margin-bottom: 5;
  }

  .md\:mb-\[50\] {
    margin-bottom: 50;
  }

  .md\:mb-\[50p\] {
    margin-bottom: 50p;
  }

  .md\:mb-\[50px\] {
    margin-bottom: 50px;
  }

  .md\:mb-\[4\] {
    margin-bottom: 4;
  }

  .md\:mb-\[40\] {
    margin-bottom: 40;
  }

  .md\:mb-\[40p\] {
    margin-bottom: 40p;
  }

  .md\:mb-\[40px\] {
    margin-bottom: 40px;
  }

  .md\:mt-\[\] {
    margin-top: ;
  }

  .md\:mt-\[1\] {
    margin-top: 1;
  }

  .md\:mt-\[10\] {
    margin-top: 10;
  }

  .md\:mt-\[10p\] {
    margin-top: 10p;
  }

  .md\:mt-\[10px\] {
    margin-top: 10px;
  }

  .md\:mb-\[8\] {
    margin-bottom: 8;
  }

  .md\:mb-\[80\] {
    margin-bottom: 80;
  }

  .md\:mb-\[80p\] {
    margin-bottom: 80p;
  }

  .md\:mb-\[80px\] {
    margin-bottom: 80px;
  }

  .md\:h-\[100vh\] {
    height: 100vh;
  }

  .md\:h-\[\] {
    height: ;
  }

  .md\:h-\[1\] {
    height: 1;
  }

  .md\:h-\[10\] {
    height: 10;
  }

  .md\:h-\[100\] {
    height: 100;
  }

  .md\:h-\[100p\] {
    height: 100p;
  }

  .md\:h-\[100px\] {
    height: 100px;
  }

  .md\:w-\[\] {
    width: ;
  }

  .md\:w-\[1\] {
    width: 1;
  }

  .md\:w-\[10\] {
    width: 10;
  }

  .md\:w-\[10\%\] {
    width: 10%;
  }

  .md\:w-px {
    width: 1px;
  }

  .md\:translate-x-0 {
    --tw-translate-x: 0px;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .md\:translate-x-\[\] {
    --tw-translate-x: ;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .md\:translate-x-\[2\] {
    --tw-translate-x: 2;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .md\:translate-x-\[20\] {
    --tw-translate-x: 20;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .md\:translate-x-\[20\%\] {
    --tw-translate-x: 20%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .md\:translate-x-\[0\%\] {
    --tw-translate-x: 0%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .md\:translate-x-\[50\%\] {
    --tw-translate-x: 50%;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .md\:rotate-90 {
    --tw-rotate: 90deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .md\:-rotate-90 {
    --tw-rotate: -90deg;
    transform: translate(var(--tw-translate-x), var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  }

  .md\:flex-col {
    flex-direction: column;
  }

  .md\:items-center {
    align-items: center;
  }

  .md\:bg-secondary {
    --tw-bg-opacity: 1;
    background-color: rgb(26 24 24 / var(--tw-bg-opacity));
  }

  .md\:pl-\[\] {
    padding-left: ;
  }

  .md\:pl-\[6\] {
    padding-left: 6;
  }

  .md\:pl-\[6p\] {
    padding-left: 6p;
  }

  .md\:pl-\[6px\] {
    padding-left: 6px;
  }

  .md\:pb-\[\] {
    padding-bottom: ;
  }

  .md\:pb-\[3\] {
    padding-bottom: 3;
  }

  .md\:pb-\[30\] {
    padding-bottom: 30;
  }

  .md\:pb-\[30p\] {
    padding-bottom: 30p;
  }

  .md\:pb-\[30px\] {
    padding-bottom: 30px;
  }

  .md\:pt-4 {
    padding-top: 1rem;
  }
}

@media (min-width: 1024px) {
  .lg\:left-0 {
    left: 0px;
  }
}
